# Monitoring Configuration for Retail Analytics AI

# Metrics collection
metrics:
  # Model performance metrics
  model_performance:
    - name: "prediction_error"
      type: "gauge"
      description: "Prediction error for forecasting model"
      labels:
        - "model_name"
        - "model_version"
        - "store_id"
        - "category"
    
    - name: "model_latency"
      type: "histogram"
      description: "Model prediction latency in seconds"
      buckets: [0.01, 0.05, 0.1, 0.5, 1.0, 5.0]
      labels:
        - "model_name"
        - "endpoint"
    
    - name: "model_throughput"
      type: "counter"
      description: "Number of predictions made"
      labels:
        - "model_name"
        - "endpoint"
  
  # Data quality metrics
  data_quality:
    - name: "data_drift"
      type: "gauge"
      description: "Data drift score between training and production data"
      labels:
        - "feature_name"
        - "dataset"
    
    - name: "missing_values"
      type: "gauge"
      description: "Percentage of missing values in input data"
      labels:
        - "feature_name"
        - "dataset"
    
    - name: "outlier_score"
      type: "gauge"
      description: "Outlier score for input data"
      labels:
        - "feature_name"
        - "dataset"
  
  # API metrics
  api:
    - name: "request_count"
      type: "counter"
      description: "Number of API requests"
      labels:
        - "endpoint"
        - "method"
        - "status_code"
    
    - name: "request_latency"
      type: "histogram"
      description: "API request latency in seconds"
      buckets: [0.01, 0.05, 0.1, 0.5, 1.0, 5.0]
      labels:
        - "endpoint"
        - "method"
    
    - name: "error_rate"
      type: "gauge"
      description: "API error rate"
      labels:
        - "endpoint"
        - "method"

# Alerts configuration
alerts:
  # Model performance alerts
  - name: "high_prediction_error"
    condition: "prediction_error > 0.2"
    duration: "5m"
    severity: "warning"
    description: "High prediction error detected"
    notification_channels:
      - "email"
      - "slack"
  
  - name: "severe_prediction_error"
    condition: "prediction_error > 0.5"
    duration: "5m"
    severity: "critical"
    description: "Severe prediction error detected"
    notification_channels:
      - "email"
      - "slack"
      - "pagerduty"
  
  # Data quality alerts
  - name: "significant_data_drift"
    condition: "data_drift > 0.3"
    duration: "10m"
    severity: "warning"
    description: "Significant data drift detected"
    notification_channels:
      - "email"
      - "slack"
  
  - name: "severe_data_drift"
    condition: "data_drift > 0.5"
    duration: "5m"
    severity: "critical"
    description: "Severe data drift detected"
    notification_channels:
      - "email"
      - "slack"
      - "pagerduty"
  
  # API alerts
  - name: "high_error_rate"
    condition: "error_rate > 0.05"
    duration: "5m"
    severity: "warning"
    description: "High API error rate"
    notification_channels:
      - "email"
      - "slack"
  
  - name: "high_latency"
    condition: "request_latency_p95 > 1.0"
    duration: "5m"
    severity: "warning"
    description: "High API latency"
    notification_channels:
      - "email"
      - "slack"

# Dashboards
dashboards:
  - name: "Model Performance"
    description: "Dashboard for monitoring model performance"
    metrics:
      - "prediction_error"
      - "model_latency"
      - "model_throughput"
  
  - name: "Data Quality"
    description: "Dashboard for monitoring data quality"
    metrics:
      - "data_drift"
      - "missing_values"
      - "outlier_score"
  
  - name: "API Performance"
    description: "Dashboard for monitoring API performance"
    metrics:
      - "request_count"
      - "request_latency"
      - "error_rate"

# Logging configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/monitoring.log"
  rotation: "1 day"
  retention: "30 days"

# Notification channels
notification_channels:
  email:
    recipients:
      - "alerts@example.com"
    sender: "monitoring@example.com"
    subject_prefix: "[ALERT] "
  
  slack:
    webhook_url_env: "SLACK_WEBHOOK_URL"
    channel: "#monitoring-alerts"
    username: "Monitoring Bot"
  
  pagerduty:
    integration_key_env: "PAGERDUTY_INTEGRATION_KEY"
    service_id: "P123456"